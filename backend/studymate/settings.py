# """
# Django settings for studymate project.
# Generated by 'django-admin startproject' using Django 5.2.3.
# """

# import os
# import sys
# from pathlib import Path
# from mongoengine import connect
# from dotenv import load_dotenv
# from corsheaders.defaults import default_headers

# # Base directory
# BASE_DIR = Path(__file__).resolve().parent.parent

# # ‚úÖ Add backend to sys.path (to ensure 'core' app is importable)
# sys.path.append(os.path.join(BASE_DIR, 'backend'))

# # Load environment variables
# load_dotenv()

# # Secret Key & Debug
# SECRET_KEY = os.getenv("DJANGO_SECRET_KEY", "unsafe-secret-key")
# DEBUG = os.getenv("DEBUG", "False") == "True"

# # Allowed Hosts
# ALLOWED_HOSTS = os.getenv("ALLOWED_HOSTS", "localhost,127.0.0.1,studymate-backend-n321.onrender.com").split(",")

# # CORS Configuration
# CORS_ALLOW_ALL_ORIGINS = False

# CORS_ALLOWED_ORIGINS = [
#     "http://localhost:3000",
#     "https://syllabusseal-ss.vercel.app",
#     "https://syllabusseal-kbzgq5cz1-divyasais-projects.vercel.app"  # ‚úÖ Fixed comma issue
# ]

# CORS_ALLOW_CREDENTIALS = True

# CORS_ALLOW_HEADERS = list(default_headers) + [
#     "Access-Control-Allow-Origin",
#     "Content-Disposition",
#     "Content-Type",
#     "Authorization",
# ]

# # Application Definition
# INSTALLED_APPS = [
#     'django.contrib.admin',
#     'django.contrib.auth',
#     'django.contrib.contenttypes',
#     'django.contrib.sessions',
#     'django.contrib.messages',
#     'django.contrib.staticfiles',
#     'rest_framework',
#     'core',
#     'corsheaders',
#     'cloudinary',
#     'cloudinary_storage',
# ]

# MIDDLEWARE = [
#     'corsheaders.middleware.CorsMiddleware',
#     'django.middleware.common.CommonMiddleware',
#     'django.middleware.security.SecurityMiddleware',
#     'whitenoise.middleware.WhiteNoiseMiddleware',
#     'django.contrib.sessions.middleware.SessionMiddleware',
#     'django.middleware.csrf.CsrfViewMiddleware',
#     'django.contrib.auth.middleware.AuthenticationMiddleware',
#     'django.contrib.messages.middleware.MessageMiddleware',
#     'django.middleware.clickjacking.XFrameOptionsMiddleware',
# ]

# ROOT_URLCONF = 'studymate.urls'

# TEMPLATES = [
#     {
#         'BACKEND': 'django.template.backends.django.DjangoTemplates',
#         'DIRS': [],
#         'APP_DIRS': True,
#         'OPTIONS': {
#             'context_processors': [
#                 'django.template.context_processors.request',
#                 'django.contrib.auth.context_processors.auth',
#                 'django.contrib.messages.context_processors.messages',
#             ],
#         },
#     },
# ]

# WSGI_APPLICATION = 'studymate.wsgi.application'

# # SQLite Database
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }

# # MongoDB via mongoengine
# connect(
#     db='studymate',
#     host=os.getenv("MONGODB_URI", "mongodb://localhost:27017/studymate")
# )

# # Password Validators
# AUTH_PASSWORD_VALIDATORS = [
#     {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},
#     {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},
#     {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},
#     {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'},
# ]

# # Internationalization
# LANGUAGE_CODE = 'en-us'
# TIME_ZONE = 'UTC'
# USE_I18N = True
# USE_TZ = True

# # Static files
# STATIC_URL = '/static/'
# STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# # Media files (Cloudinary)
# DEFAULT_FILE_STORAGE = 'cloudinary_storage.storage.MediaCloudinaryStorage'
# CLOUDINARY_STORAGE = {
#     'CLOUD_NAME': os.getenv("CLOUDINARY_CLOUD_NAME"),
#     'API_KEY': os.getenv("CLOUDINARY_API_KEY"),
#     'API_SECRET': os.getenv("CLOUDINARY_API_SECRET"),
# }
# MEDIA_URL = '/media/'

# # ‚úÖ DEBUG PRINTS FOR ENV VARS ‚Äì REMOVE AFTER FIXING
# print("\nüîç DEBUG: Cloudinary Environment Variables")
# print("CLOUDINARY_CLOUD_NAME:", CLOUDINARY_STORAGE['CLOUD_NAME'])
# print("CLOUDINARY_API_KEY:", CLOUDINARY_STORAGE['API_KEY'])
# print("CLOUDINARY_API_SECRET SET:", bool(CLOUDINARY_STORAGE['API_SECRET']))
# print("DJANGO_SECRET_KEY SET:", bool(SECRET_KEY))
# print("DEBUG:", DEBUG)
# print("ALLOWED_HOSTS:", ALLOWED_HOSTS)
# print("CORS_ALLOWED_ORIGINS:", CORS_ALLOWED_ORIGINS)
# print("MONGODB_URI:", os.getenv("MONGODB_URI"))
# print("‚úÖ End of Django settings debug.\n")

# # Primary key type
# DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# # HTTPS behind proxy (Render)
# SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')




















"""
Django settings for studymate project.
Generated by 'django-admin startproject' using Django 5.2.3.
"""

import os
import sys
from pathlib import Path
from mongoengine import connect
from dotenv import load_dotenv
from corsheaders.defaults import default_headers

# Base directory
BASE_DIR = Path(__file__).resolve().parent.parent

# ‚úÖ Add backend to sys.path (to ensure 'core' app is importable)
sys.path.append(os.path.join(BASE_DIR, 'backend'))

# Load environment variables
load_dotenv()

# Secret Key & Debug
SECRET_KEY = os.getenv("DJANGO_SECRET_KEY", "unsafe-secret-key")
DEBUG = os.getenv("DEBUG", "False") == "True"

# Allowed Hosts
ALLOWED_HOSTS = os.getenv("ALLOWED_HOSTS", "localhost,127.0.0.1,studymate-backend-n321.onrender.com").split(",")

# CORS Configuration
CORS_ALLOW_ALL_ORIGINS = False

CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",
    "https://syllabusseal-ss.vercel.app",
    "https://syllabusseal-kbzgq5cz1-divyasais-projects.vercel.app"  # ‚úÖ Fixed comma issue
]

CORS_ALLOW_CREDENTIALS = True

CORS_ALLOW_HEADERS = list(default_headers) + [
    "Access-Control-Allow-Origin",
    "Content-Disposition",
    "Content-Type",               # ‚úÖ Required for POST/PUT
    "Authorization",              # ‚úÖ If using auth tokens
]


# Application Definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'core',  # Your custom app
    'corsheaders',
    'cloudinary',
    'cloudinary_storage',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',            # ‚úÖ Must be first
    'django.middleware.common.CommonMiddleware',        # ‚úÖ Next
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'studymate.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'studymate.wsgi.application'

# SQLite Database
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# MongoDB via mongoengine
connect(
    db='studymate',
    host=os.getenv("MONGODB_URI", "mongodb://localhost:27017/studymate")
)

# Password Validators
AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'},
]

# Internationalization
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True

# Static files
STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# Media files (Cloudinary)
DEFAULT_FILE_STORAGE = 'cloudinary_storage.storage.MediaCloudinaryStorage'
CLOUDINARY_STORAGE = {
    'CLOUD_NAME': os.getenv("CLOUDINARY_CLOUD_NAME"),
    'API_KEY': os.getenv("CLOUDINARY_API_KEY"),
    'API_SECRET': os.getenv("CLOUDINARY_API_SECRET"),
}
MEDIA_URL = '/media/'

# Primary key type
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# HTTPS behind proxy (Render)
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
